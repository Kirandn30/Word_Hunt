{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/kiran/OneDrive/Desktop/word_hunt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/kiran/OneDrive/Desktop/word_hunt/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\kiran\\\\OneDrive\\\\Desktop\\\\word_hunt\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import'./App.css';import axios from\"axios\";import{useEffect,useState}from'react';import{Container,Switch,withStyles}from'@material-ui/core';import Header from'./Components/header/header';import Definition from'./Components/Definitions/Definitions';import{grey}from'@material-ui/core/colors';import transitions from'@material-ui/core/styles/transitions';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),meaning=_useState2[0],setmeaning=_useState2[1];var _useState3=useState(\"en\"),_useState4=_slicedToArray(_useState3,2),language=_useState4[0],setLanguage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),word=_useState6[0],setword=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),lightMode=_useState8[0],setlightMode=_useState8[1];var DarkMode=withStyles({switchBase:{color:grey[300],'&$checked':{color:grey[500]},'&$checked + $track':{backgroundColor:grey[500]}},checked:{},track:{}})(Switch);var url=\"https://api.dictionaryapi.dev/api/v2/entries/\".concat(language,\"/\").concat(word);var dictionaryApi=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(url);case 3:data=_context.sent;setmeaning(data.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function dictionaryApi(){return _ref.apply(this,arguments);};}();useEffect(function(){dictionaryApi();},[word,language]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",style:{backgroundColor:lightMode?\"#fff\":\"#282c34\",color:lightMode?\"black\":\"white\",transition:\"all 0.7s linear\"},children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",style:{height:\"100vh\",display:\"flex\",flexDirection:'column',justifyContent:\"space-evenly\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:\"absolute\",top:0,right:15,padding:10},children:[/*#__PURE__*/_jsxs(\"span\",{children:[lightMode?\"Light\":\"Dark\",\" Mode\"]}),/*#__PURE__*/_jsx(DarkMode,{checked:lightMode,onChange:function onChange(){return setlightMode(!lightMode);}})]}),/*#__PURE__*/_jsx(Header,{language:language,setLanguage:setLanguage,word:word,setword:setword,lightMode:lightMode,setlightMode:setlightMode}),meaning&&/*#__PURE__*/_jsx(Definition,{meaning:meaning,language:language,word:word,lightMode:lightMode})]})})});}export default App;","map":{"version":3,"sources":["C:/Users/kiran/OneDrive/Desktop/word_hunt/src/App.js"],"names":["axios","useEffect","useState","Container","Switch","withStyles","Header","Definition","grey","transitions","App","meaning","setmeaning","language","setLanguage","word","setword","lightMode","setlightMode","DarkMode","switchBase","color","backgroundColor","checked","track","url","dictionaryApi","get","data","console","log","transition","height","display","flexDirection","justifyContent","position","top","right","padding"],"mappings":"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","sourcesContent":["import './App.css';\nimport axios from \"axios\"\nimport { useEffect, useState } from 'react';\nimport { Container, Switch, withStyles } from '@material-ui/core';\nimport Header from './Components/header/header';\nimport Definition from './Components/Definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\nimport transitions from '@material-ui/core/styles/transitions';\n\nfunction App() {\n\n  const [meaning, setmeaning] = useState([])\n  const [language, setLanguage]=useState(\"en\")\n  const [word, setword] = useState(\"\")\n  const [lightMode, setlightMode]=useState(false)\n\n  const DarkMode = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\nconst url = `https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`\nconst dictionaryApi = async()=>{\n \n  try{\n     const data = await axios.get(url)\n     setmeaning(data.data)\n  }\n  catch(error){\n       console.log(error)\n  }\n}\n\nuseEffect(()=>{\n  \ndictionaryApi()\n\n},[word, language]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{backgroundColor:lightMode? \"#fff\": \"#282c34\", color:lightMode? \"black\":\"white\", transition:\"all 0.7s linear\"}}>\n      <Container maxWidth=\"md\" style={{height:\"100vh\", display:\"flex\", flexDirection:'column', justifyContent:\"space-evenly\"}}>\n      <div style={{position:\"absolute\", top:0, right:15, padding:10}}>\n      <span>{lightMode?\"Light\":\"Dark\"} Mode</span>\n       <DarkMode\n         checked={lightMode}\n         onChange={()=>setlightMode(!lightMode)}\n       />\n      </div>\n      <Header\n       language={language}\n       setLanguage={setLanguage}\n       word={word}\n       setword={setword}\n       lightMode={lightMode}\n       setlightMode={setlightMode}\n       \n      />\n       {meaning&& <Definition meaning={meaning} language={language} word={word} lightMode={lightMode}/>}\n      </Container>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}