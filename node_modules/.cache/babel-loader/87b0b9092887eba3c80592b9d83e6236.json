{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\OneDrive\\\\Desktop\\\\word_hunt\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nimport { Container, Switch, withStyles } from '@material-ui/core';\nimport Header from './Components/header/header';\nimport Definition from './Components/Definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\nimport transitions from '@material-ui/core/styles/transitions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [meaning, setmeaning] = useState([]);\n  const [language, setLanguage] = useState(\"en\");\n  const [word, setword] = useState(\"\");\n  const [lightMode, setlightMode] = useState(false);\n  const DarkMode = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500]\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500]\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  const url = `https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`;\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(url);\n      setmeaning(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      style: {\n        backgroundColor: lightMode ? \"#fff\" : \"#282c34\",\n        color: lightMode ? \"black\" : \"white\",\n        transition: \"all 0.8s linear\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        style: {\n          height: \"100vh\",\n          display: \"flex\",\n          flexDirection: 'column',\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            top: 0,\n            right: 15,\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [lightMode ? \"Light\" : \"Dark\", \" Mode\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(DarkMode, {\n            checked: lightMode,\n            onChange: () => setlightMode(!lightMode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          language: language,\n          setLanguage: setLanguage,\n          word: word,\n          setword: setword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), meaning && /*#__PURE__*/_jsxDEV(Definition, {\n          meaning: meaning,\n          language: language,\n          word: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KOkFgAo2XGaj0VdIphsaPV0Ghfw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kiran/OneDrive/Desktop/word_hunt/src/App.js"],"names":["axios","useEffect","useState","Container","Switch","withStyles","Header","Definition","grey","transitions","App","meaning","setmeaning","language","setLanguage","word","setword","lightMode","setlightMode","DarkMode","switchBase","color","backgroundColor","checked","track","url","dictionaryApi","data","get","error","console","log","transition","height","display","flexDirection","justifyContent","position","top","right","padding"],"mappings":"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","sourcesContent":["import './App.css';\nimport axios from \"axios\"\nimport { useEffect, useState } from 'react';\nimport { Container, Switch, withStyles } from '@material-ui/core';\nimport Header from './Components/header/header';\nimport Definition from './Components/Definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\nimport transitions from '@material-ui/core/styles/transitions';\n\nfunction App() {\n\n  const [meaning, setmeaning] = useState([])\n  const [language, setLanguage]=useState(\"en\")\n  const [word, setword] = useState(\"\")\n  const [lightMode, setlightMode]=useState(false)\n\n  const DarkMode = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: grey[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\nconst url = `https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`\nconst dictionaryApi = async()=>{\n \n  try{\n     const data = await axios.get(url)\n     setmeaning(data.data)\n  }\n  catch(error){\n       console.log(error)\n  }\n}\n\nuseEffect(()=>{\n  \ndictionaryApi()\n\n},[word, language]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{backgroundColor:lightMode? \"#fff\": \"#282c34\", color:lightMode? \"black\":\"white\", transition:\"all 0.8s linear\"}}>\n      <Container maxWidth=\"md\" style={{height:\"100vh\", display:\"flex\", flexDirection:'column', justifyContent:\"space-evenly\"}}>\n      <div style={{position:\"absolute\", top:0, right:15, padding:10}}>\n      <span>{lightMode?\"Light\":\"Dark\"} Mode</span>\n       <DarkMode\n         checked={lightMode}\n         onChange={()=>setlightMode(!lightMode)}\n       />\n      </div>\n      <Header\n       language={language}\n       setLanguage={setLanguage}\n       word={word}\n       setword={setword}\n       \n      />\n       {meaning&& <Definition meaning={meaning} language={language} word={word}/>}\n      </Container>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}