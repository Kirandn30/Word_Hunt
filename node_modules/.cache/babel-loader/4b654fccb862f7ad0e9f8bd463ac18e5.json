{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\OneDrive\\\\Desktop\\\\word_hunt\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from \"axios\";\nimport { useEffect, useState } from 'react';\nimport { Container, withStyles } from '@material-ui/core';\nimport Header from './Components/header/header';\nimport Definition from './Components/Definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [meaning, setmeaning] = useState([]);\n  const [language, setLanguage] = useState(\"en\");\n  const [word, setword] = useState(\"\");\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: purple[500]\n      },\n      '&$checked + $track': {\n        backgroundColor: purple[500]\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  const url = `https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`;\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(url);\n      setmeaning(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      style: {\n        backgroundColor: \"#282c34\",\n        color: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        style: {\n          height: \"100vh\",\n          display: \"flex\",\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          language: language,\n          setLanguage: setLanguage,\n          word: word,\n          setword: setword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), meaning && /*#__PURE__*/_jsxDEV(Definition, {\n          meaning: meaning,\n          language: language,\n          word: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fkpEnhT533wIFsTN8wXS4iot9tk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kiran/OneDrive/Desktop/word_hunt/src/App.js"],"names":["axios","useEffect","useState","Container","withStyles","Header","Definition","grey","App","meaning","setmeaning","language","setLanguage","word","setword","PurpleSwitch","switchBase","color","purple","backgroundColor","checked","track","Switch","url","dictionaryApi","data","get","error","console","log","height","display","flexDirection"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mBAAtC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,SAASC,IAAT,QAAqB,0BAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMa,YAAY,GAAGX,UAAU,CAAC;AAC9BY,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAEV,IAAI,CAAC,GAAD,CADD;AAEV,mBAAa;AACXU,QAAAA,KAAK,EAAEC,MAAM,CAAC,GAAD;AADF,OAFH;AAKV,4BAAsB;AACpBC,QAAAA,eAAe,EAAED,MAAM,CAAC,GAAD;AADH;AALZ,KADkB;AAU9BE,IAAAA,OAAO,EAAE,EAVqB;AAW9BC,IAAAA,KAAK,EAAE;AAXuB,GAAD,CAAV,CAYlBC,MAZkB,CAArB;AAcF,QAAMC,GAAG,GAAI,gDAA+CZ,QAAS,IAAGE,IAAK,EAA7E;;AACA,QAAMW,aAAa,GAAG,YAAS;AAE7B,QAAG;AACA,YAAMC,IAAI,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAUH,GAAV,CAAnB;AACAb,MAAAA,UAAU,CAACe,IAAI,CAACA,IAAN,CAAV;AACF,KAHD,CAIA,OAAME,KAAN,EAAY;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACJ;AACF,GATD;;AAWA1B,EAAAA,SAAS,CAAC,MAAI;AAEduB,IAAAA,aAAa;AAEZ,GAJQ,EAIP,CAACX,IAAD,EAAOF,QAAP,CAJO,CAAT;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,KAAK,EAAE;AAACQ,QAAAA,eAAe,EAAC,SAAjB;AAA4BF,QAAAA,KAAK,EAAC;AAAlC,OAAtC;AAAA,6BACA,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAE;AAACa,UAAAA,MAAM,EAAC,OAAR;AAAiBC,UAAAA,OAAO,EAAC,MAAzB;AAAiCC,UAAAA,aAAa,EAAC;AAA/C,SAAhC;AAAA,gCACA,QAAC,MAAD;AACC,UAAA,QAAQ,EAAErB,QADX;AAEC,UAAA,WAAW,EAAEC,WAFd;AAGC,UAAA,IAAI,EAAEC,IAHP;AAIC,UAAA,OAAO,EAAEC;AAJV;AAAA;AAAA;AAAA;AAAA,gBADA,EAOEL,OAAO,iBAAG,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEA,OAArB;AAA8B,UAAA,QAAQ,EAAEE,QAAxC;AAAkD,UAAA,IAAI,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,gBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GArDQL,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport axios from \"axios\"\nimport { useEffect, useState } from 'react';\nimport { Container, withStyles } from '@material-ui/core';\nimport Header from './Components/header/header';\nimport Definition from './Components/Definitions/Definitions';\nimport { grey } from '@material-ui/core/colors';\n\nfunction App() {\n\n  const [meaning, setmeaning] = useState([])\n  const [language, setLanguage]=useState(\"en\")\n  const [word, setword] = useState(\"\")\n\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: grey[300],\n      '&$checked': {\n        color: purple[500],\n      },\n      '&$checked + $track': {\n        backgroundColor: purple[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch);\n\nconst url = `https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`\nconst dictionaryApi = async()=>{\n \n  try{\n     const data = await axios.get(url)\n     setmeaning(data.data)\n  }\n  catch(error){\n       console.log(error)\n  }\n}\n\nuseEffect(()=>{\n  \ndictionaryApi()\n\n},[word, language]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{backgroundColor:\"#282c34\", color:\"white\"}}>\n      <Container maxWidth=\"md\" style={{height:\"100vh\", display:\"flex\", flexDirection:'column'}}>\n      <Header\n       language={language}\n       setLanguage={setLanguage}\n       word={word}\n       setword={setword}\n      />\n       {meaning&& <Definition meaning={meaning} language={language} word={word}/>}\n      </Container>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}